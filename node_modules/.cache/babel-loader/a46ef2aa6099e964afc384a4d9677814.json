{"ast":null,"code":"var _jsxFileName = \"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/drag_and_drop.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WordData } from \"./constants/word_data\";\nimport WordNavbar from \"./navigation/word_navbar\";\nimport AudioPlayer from \"./common/audio_player\";\nimport * as CgIcon from \"react-icons/cg\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"./drag_and_drop.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction onDragStart(e, options, key, withPicture) {\n  e.dataTransfer.setData(\"id\", key);\n  if (!withPicture) return;\n  var img = new Image(150, 150);\n  img.src = options[key].ancientUrl;\n  e.dataTransfer.setDragImage(img, 0, 0);\n}\n\nfunction DragAndDropPractice() {\n  _s();\n\n  const {\n    word\n  } = useParams();\n  const [options, setOptions] = useState(WordData);\n  const [selectedOption, setSelectedOption] = useState(\"0\");\n  const [withPicture, setWithPicture] = useState(true);\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n    const imageFilePath = withPicture ? WordData[word].imageUrl : WordData[word].ancientUrl;\n\n    if (el) {\n      el.style.backgroundImage = `url('${imageFilePath}')`;\n    }\n  }, [withPicture, word]);\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n\n    if (!el) {\n      return;\n    }\n\n    if (selectedOption === word) {\n      el.style.filter = `invert(100%) sepia(9%) saturate(1640%) hue-rotate(170deg)\n        brightness(93%) contrast(90%)`;\n    } else {\n      el.style.filter = ``;\n    }\n  }, [selectedOption, word]);\n  const draggableOptions = Object.keys(options).map(key => {\n    const option = withPicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"ancient-word\",\n      src: options[key].ancientUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"word-option\",\n      children: key\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onDragStart: e => {\n        onDragStart(e, options, key, withPicture);\n      },\n      draggable: true,\n      className: \"draggable\",\n      children: option\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  });\n  const option = WordData[selectedOption] && withPicture ? /*#__PURE__*/_jsxDEV(\"img\", {\n    className: \"selected\",\n    src: WordData[selectedOption].ancientUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n    className: \"selected-word\",\n    children: selectedOption\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 7\n  }, this);\n\n  const next = () => {\n    setWithPicture(!withPicture);\n    setSelectedOption(\"0\");\n    setOptions(WordData);\n  }; // (TODO) add refresh button.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-drag\",\n    children: [/*#__PURE__*/_jsxDEV(WordNavbar, {\n      word: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(AudioPlayer, {\n        btnText: \"\\u62D6\\u66F3\\u5C0D\\u61C9\\u5716\\u50CF\\u5230\\u53F3\\u5074\",\n        url: \"https://dl.dropbox.com/s/0mr16u4khakqtid/%E6%8B%96%E6%9B%B3%E5%B0%8D%E6%87%89%E5%9C%96%E5%83%8F%E5%88%B0%E5%8F%B3%E5%81%B4.mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), draggableOptions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"character\",\n      className: \"droppable\",\n      onDragOver: e => {\n        e.preventDefault();\n      },\n      onDrop: e => {\n        let id = e.dataTransfer.getData(\"id\");\n        const filteredByKey = Object.fromEntries(Object.entries(options).filter(([key, value]) => key !== id));\n        setOptions(filteredByKey);\n        setSelectedOption(id);\n        toast.dismiss();\n        const rightAnswer = id === word ? \"答對了!\" : \"再試一次!\";\n        toast.warn(rightAnswer);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"next-button\",\n        onClick: next,\n        children: /*#__PURE__*/_jsxDEV(CgIcon.CgArrowRightR, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), WordData[selectedOption] && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: option\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DragAndDropPractice, \"1ASWsk0q99VFSeP0XvecsovwQPo=\", false, function () {\n  return [useParams];\n});\n\n_c = DragAndDropPractice;\nexport default DragAndDropPractice;\n\nvar _c;\n\n$RefreshReg$(_c, \"DragAndDropPractice\");","map":{"version":3,"sources":["/Users/tpan/Development/volunteer/breathing-hanzi/src/components/drag_and_drop.tsx"],"names":["React","useState","useEffect","useParams","WordData","WordNavbar","AudioPlayer","CgIcon","ToastContainer","toast","onDragStart","e","options","key","withPicture","dataTransfer","setData","img","Image","src","ancientUrl","setDragImage","DragAndDropPractice","word","setOptions","selectedOption","setSelectedOption","setWithPicture","el","document","getElementById","imageFilePath","imageUrl","style","backgroundImage","filter","draggableOptions","Object","keys","map","option","next","preventDefault","id","getData","filteredByKey","fromEntries","entries","value","dismiss","rightAnswer","warn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WordData, WordToURLMap } from \"./constants/word_data\";\nimport WordNavbar from \"./navigation/word_navbar\";\nimport AudioPlayer from \"./common/audio_player\";\nimport * as CgIcon from \"react-icons/cg\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"./drag_and_drop.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction onDragStart(\n  e: any,\n  options: WordToURLMap,\n  key: string,\n  withPicture: boolean\n) {\n  e.dataTransfer.setData(\"id\", key);\n  if (!withPicture) return;\n\n  var img = new Image(150, 150);\n  img.src = options[key].ancientUrl;\n  e.dataTransfer.setDragImage(img, 0, 0);\n}\n\nfunction DragAndDropPractice() {\n  const { word } = useParams<{ word: string }>();\n  const [options, setOptions] = useState(WordData);\n  const [selectedOption, setSelectedOption] = useState(\"0\");\n  const [withPicture, setWithPicture] = useState(true);\n\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n    const imageFilePath = withPicture\n      ? WordData[word].imageUrl\n      : WordData[word].ancientUrl;\n\n    if (el) {\n      el.style.backgroundImage = `url('${imageFilePath}')`;\n    }\n  }, [withPicture, word]);\n\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n    if (!el) {\n      return;\n    }\n\n    if (selectedOption === word) {\n      el.style.filter = `invert(100%) sepia(9%) saturate(1640%) hue-rotate(170deg)\n        brightness(93%) contrast(90%)`;\n    } else {\n      el.style.filter = ``;\n    }\n  }, [selectedOption, word]);\n\n  const draggableOptions = Object.keys(options).map(key => {\n    const option = withPicture ? (\n      <img className=\"ancient-word\" src={options[key].ancientUrl} />\n    ) : (\n      <span className=\"word-option\">{key}</span>\n    );\n    return (\n      <div\n        key={key}\n        onDragStart={e => {\n          onDragStart(e, options, key, withPicture);\n        }}\n        draggable\n        className=\"draggable\"\n      >\n        {option}\n      </div>\n    );\n  });\n\n  const option =\n    WordData[selectedOption] && withPicture ? (\n      <img className=\"selected\" src={WordData[selectedOption].ancientUrl} />\n    ) : (\n      <h2 className=\"selected-word\">{selectedOption}</h2>\n    );\n  const next = () => {\n    setWithPicture(!withPicture);\n    setSelectedOption(\"0\");\n    setOptions(WordData);\n  };\n  // (TODO) add refresh button.\n\n  return (\n    <div className=\"container-drag\">\n      <WordNavbar word={word} />\n      <div className=\"options\">\n        <AudioPlayer\n          btnText=\"拖曳對應圖像到右側\"\n          url=\"https://dl.dropbox.com/s/0mr16u4khakqtid/%E6%8B%96%E6%9B%B3%E5%B0%8D%E6%87%89%E5%9C%96%E5%83%8F%E5%88%B0%E5%8F%B3%E5%81%B4.mp3\"\n        />\n        {draggableOptions}\n      </div>\n      <div\n        id=\"character\"\n        className=\"droppable\"\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDrop={e => {\n          let id = e.dataTransfer.getData(\"id\");\n          const filteredByKey = Object.fromEntries(\n            Object.entries(options).filter(([key, value]) => key !== id)\n          );\n          setOptions(filteredByKey);\n          setSelectedOption(id);\n\n          toast.dismiss();\n          const rightAnswer = id === word ? \"答對了!\" : \"再試一次!\";\n          toast.warn(rightAnswer);\n        }}\n      >\n        <button className=\"next-button\" onClick={next}>\n          <CgIcon.CgArrowRightR />\n        </button>\n        {WordData[selectedOption] && <div>{option}</div>}\n      </div>\n      <div>\n        <ToastContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default DragAndDropPractice;\n"]},"metadata":{},"sourceType":"module"}