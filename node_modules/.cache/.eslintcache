[{"/Users/tpan/Development/volunteer/breathing-hanzi/src/index.tsx":"1","/Users/tpan/Development/volunteer/breathing-hanzi/src/reportWebVitals.ts":"2","/Users/tpan/Development/volunteer/breathing-hanzi/src/App.tsx":"3","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/navigation/navbar.tsx":"4","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/drag_and_drop.tsx":"5","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/tester_container.tsx":"6","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_container.tsx":"7","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_card_list.tsx":"8","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/navigation/word_navbar.tsx":"9","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_presenter.tsx":"10","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/test_presenter.tsx":"11","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/word_data.tsx":"12","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/sidebar_data.tsx":"13","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/audio_player.tsx":"14","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/video_player.tsx":"15","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/word_navbar_data.tsx":"16","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/modal.tsx":"17"},{"size":478,"mtime":1642286186183,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1642286186183,"results":"20","hashOfConfig":"19"},{"size":1534,"mtime":1642370559746,"results":"21","hashOfConfig":"19"},{"size":1643,"mtime":1642371394463,"results":"22","hashOfConfig":"19"},{"size":3669,"mtime":1642286186179,"results":"23","hashOfConfig":"19"},{"size":3428,"mtime":1642286186181,"results":"24","hashOfConfig":"19"},{"size":991,"mtime":1642286186182,"results":"25","hashOfConfig":"19"},{"size":545,"mtime":1642372972909,"results":"26","hashOfConfig":"19"},{"size":661,"mtime":1642460251307,"results":"27","hashOfConfig":"19"},{"size":1443,"mtime":1642456098666,"results":"28","hashOfConfig":"19"},{"size":843,"mtime":1642286186180,"results":"29","hashOfConfig":"19"},{"size":1684,"mtime":1642371695229,"results":"30","hashOfConfig":"19"},{"size":505,"mtime":1642458517803,"results":"31","hashOfConfig":"19"},{"size":856,"mtime":1642286186178,"results":"32","hashOfConfig":"19"},{"size":377,"mtime":1642286186178,"results":"33","hashOfConfig":"19"},{"size":1186,"mtime":1642458567542,"results":"34","hashOfConfig":"19"},{"size":1043,"mtime":1642286186178,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19vkfhh",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tpan/Development/volunteer/breathing-hanzi/src/index.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/reportWebVitals.ts",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/App.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/navigation/navbar.tsx",["77"],"import { useState } from \"react\";\nimport * as FaIcons from \"react-icons/fa\";\nimport * as AiIcons from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { SidebarData } from \"../constants/sidebar_data\";\nimport \"./navbar.css\";\nimport { IconContext } from \"react-icons\";\n\nfunction Navbar() {\n  const [sidebar, setSidebar] = useState(false);\n\n  const showSidebar = () => setSidebar(!sidebar);\n  \n  return (\n    <IconContext.Provider value={{ color: \"black\" }}>\n      <div className=\"navbar\">\n          <img width=\"80\" height=\"80\" src='https://upload.wikimedia.org/wikipedia/commons/3/3e/Tree-256x256.png' />\n          <div className=\"title\">   \n            有生命的漢字\n          </div> \n        <Link to=\"#\" className=\"menu-bars\">\n          <FaIcons.FaBars onClick={showSidebar} />\n        </Link>\n      </div>\n      <nav className={sidebar ? \"nav-menu active\" : \"nav-menu\"}>\n        <ul className=\"nav-menu-items\">\n          <li className=\"navbar-toggle\">\n            <Link to=\"#\" className=\"menu-bars\" onClick={showSidebar}>\n              <AiIcons.AiOutlineClose />\n            </Link>\n          </li>\n         \n          {SidebarData.map((item, index) => {\n            return (\n              <IconContext.Provider value={{ color: \"#269950\" }}>\n                <li key={index} className={item.cName}>\n                  <Link to={item.path}>\n                    {item.icon}\n                    <span>{item.title}</span>\n                  </Link>\n                </li>\n                </IconContext.Provider>\n            );\n          })}\n        </ul>\n      </nav>\n    </IconContext.Provider>\n  );\n}\n\nexport default Navbar;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/drag_and_drop.tsx",["78","79"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WordData, WordToURLMap } from \"./constants/word_data\";\nimport WordNavbar from \"./navigation/word_navbar\";\nimport AudioPlayer from \"./common/audio_player\";\nimport * as CgIcon from \"react-icons/cg\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport \"./drag_and_drop.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction onDragStart(\n  e: any,\n  options: WordToURLMap,\n  key: string,\n  withPicture: boolean\n) {\n  e.dataTransfer.setData(\"id\", key);\n  if (!withPicture) return;\n\n  var img = new Image(150, 150);\n  img.src = options[key].ancientUrl;\n  e.dataTransfer.setDragImage(img, 0, 0);\n}\n\nfunction DragAndDropPractice() {\n  const { word } = useParams<{ word: string }>();\n  const [options, setOptions] = useState(WordData);\n  const [selectedOption, setSelectedOption] = useState(\"0\");\n  const [withPicture, setWithPicture] = useState(true);\n\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n    const imageFilePath = withPicture\n      ? WordData[word].imageUrl\n      : WordData[word].ancientUrl;\n\n    if (el) {\n      el.style.backgroundImage = `url('${imageFilePath}')`;\n    }\n  }, [withPicture, word]);\n\n  useEffect(() => {\n    const el = document.getElementById(\"character\");\n    if (!el) {\n      return;\n    }\n\n    if (selectedOption === word) {\n      el.style.filter = `invert(100%) sepia(9%) saturate(1640%) hue-rotate(170deg)\n        brightness(93%) contrast(90%)`;\n    } else {\n      el.style.filter = ``;\n    }\n  }, [selectedOption, word]);\n\n  const draggableOptions = Object.keys(options).map(key => {\n    const option = withPicture ? (\n      <img className=\"ancient-word\" src={options[key].ancientUrl} />\n    ) : (\n      <span className=\"word-option\">{key}</span>\n    );\n    return (\n      <div\n        key={key}\n        onDragStart={e => {\n          onDragStart(e, options, key, withPicture);\n        }}\n        draggable\n        className=\"draggable\"\n      >\n        {option}\n      </div>\n    );\n  });\n\n  const option =\n    WordData[selectedOption] && withPicture ? (\n      <img className=\"selected\" src={WordData[selectedOption].ancientUrl} />\n    ) : (\n      <h2 className=\"selected-word\">{selectedOption}</h2>\n    );\n  const next = () => {\n    setWithPicture(!withPicture);\n    setSelectedOption(\"0\");\n    setOptions(WordData);\n  };\n  // (TODO) add refresh button.\n\n  return (\n    <div className=\"container-drag\">\n      <WordNavbar word={word} />\n      <div className=\"options\">\n        <AudioPlayer\n          btnText=\"拖曳對應圖像到右側\"\n          url=\"https://dl.dropbox.com/s/0mr16u4khakqtid/%E6%8B%96%E6%9B%B3%E5%B0%8D%E6%87%89%E5%9C%96%E5%83%8F%E5%88%B0%E5%8F%B3%E5%81%B4.mp3\"\n        />\n        {draggableOptions}\n      </div>\n      <div\n        id=\"character\"\n        className=\"droppable\"\n        onDragOver={e => {\n          e.preventDefault();\n        }}\n        onDrop={e => {\n          let id = e.dataTransfer.getData(\"id\");\n          const filteredByKey = Object.fromEntries(\n            Object.entries(options).filter(([key, value]) => key !== id)\n          );\n          setOptions(filteredByKey);\n          setSelectedOption(id);\n\n          toast.dismiss();\n          const rightAnswer = id === word ? \"答對了!\" : \"再試一次!\";\n          toast.warn(rightAnswer);\n        }}\n      >\n        <button className=\"next-button\" onClick={next}>\n          <CgIcon.CgArrowRightR />\n        </button>\n        {WordData[selectedOption] && <div>{option}</div>}\n      </div>\n      <div>\n        <ToastContainer />\n      </div>\n    </div>\n  );\n}\n\nexport default DragAndDropPractice;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/tester_container.tsx",["80"],"import React, { useState, useEffect } from \"react\";\nimport { useLocation, useParams, useHistory } from \"react-router-dom\";\n\nimport WordNavbar from \"./navigation/word_navbar\";\nimport TestPresenter from \"./test_presenter\";\nimport AudioPlayer from \"./common/audio_player\";\nimport { Hint, WordData } from \"./constants/word_data\";\nimport VideoPlayer from \"./common/video_player\";\n\nimport HanziWriter from \"hanzi-writer\";\nimport * as CgIcon from \"react-icons/cg\";\nimport * as MdIcons from \"react-icons/md\";\n\nimport \"./tester_container.css\";\nconst queryString = require(\"query-string\");\n\nfunction getLevel(location: any) {\n  switch (queryString.parse(location.search).level) {\n    case \"1\":\n      return 1;\n    case \"2\":\n      return 2;\n    default:\n      return 3;\n  }\n}\n\nfunction Tester() {\n  const location = useLocation();\n  let history = useHistory();\n  const { word } = useParams<{ word: string }>();\n  const [showModal, setShowModal] = useState(false);\n\n  const level = getLevel(location);\n\n  useEffect(() => {\n    const nID = `nose-${level}`;\n    let idName = level < 3 ? nID : \"grid-background-target\";\n    const gridWriter = HanziWriter.create(idName, word, {\n      width: 400,\n      height: 400,\n      padding: 20\n    });\n\n    gridWriter.hideCharacter();\n    gridWriter.hideOutline();\n    gridWriter.quiz();\n  }, [level, word]);\n\n  useEffect(() => {\n    const imageFilePath =\n      level === 1 ? WordData[word].ancientUrl : WordData[word].imageUrl;\n    if (level < 3) {\n      const el = document.getElementById(`nose-${level}`);\n      if (el) {\n        el.style.backgroundImage = `url('${imageFilePath}')`;\n      }\n    }\n  }, [level, word]);\n\n  const data = WordData[word];\n  const footer =\n    level === 1 ? (\n      <button\n        className=\"level-button \"\n        onClick={() => history.push(`/hanzi/${word}/test?level=2`)}\n      >\n        <CgIcon.CgArrowRightR />\n      </button>\n    ) : (\n      buildHints(data.hints, showModal, setShowModal)\n    );\n  return (\n    <div className=\"test-container\">\n      <WordNavbar word={word} />\n      <div className=\"test-area\">\n        <AudioPlayer url={data.testAudio} btnText=\"請寫出\" />\n        <TestPresenter\n          level={level}\n          pictureUrl={WordData[word].imageUrl}\n          videoUrl={WordData[word].videoUrl}\n        />\n        <hr />\n        {footer}\n      </div>\n    </div>\n  );\n}\n\nfunction buildHints(hints: Array<Hint>, showModal: any, setShowModal: any) {\n  let summary = \"提示\";\n  return (\n    <details className=\"hint-details\">\n      <summary>{summary}</summary>\n      <ul className=\"hint-ul\">\n        {hints.map((item, index) => {\n          const num = index + 1;\n          const text = \"提示 \" + num.toString();\n          return (\n            <li key={index} className=\"hint-li\">\n              <AudioPlayer\n                url={item.audio}\n                btnText={text}\n                style=\"audio-button hint-button\"\n              />\n            </li>\n          );\n        })}\n        <li className=\"hint-li\">\n          <button\n            className=\"audio-button hint-button\"\n            onClick={() => setShowModal(true)}\n          >\n            複習 <MdIcons.MdLiveTv />\n          </button>\n          <VideoPlayer\n            open={showModal}\n            onClose={() => setShowModal(false)}\n            url=\"https://www.youtube.com/watch?v=ysz5S6PUM-U\"\n          />\n        </li>\n      </ul>\n    </details>\n  );\n}\n\nexport default Tester;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_container.tsx",["81"],"import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport HanziWriter from \"hanzi-writer\";\nimport WordPresenter from \"./word_presenter\";\nimport { WordData } from \"./constants/word_data\";\n\nfunction WordContainer() {\n  const { word } = useParams<{ word: string }>();\n  const [gridWriter, setGridWriter] = useState<HanziWriter | null>(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    if (gridWriter !== null) {\n      gridWriter.setCharacter(word);\n      return;\n    }\n\n    const writer = HanziWriter.create(word, word, {\n      width: 350,\n      height: 350,\n      padding: 20\n    });\n\n    setGridWriter(writer);\n  }, [word]);\n\n  return (\n    <WordPresenter\n      word={word}\n      ancientUrl={WordData[word].ancientUrl}\n      pictureUrl={WordData[word].imageUrl}\n      videoUrl={WordData[word].videoUrl}\n      showModal={showModal}\n      setShowModal={setShowModal}\n    />\n  );\n}\n\nexport default WordContainer;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_card_list.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/navigation/word_navbar.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/word_presenter.tsx",["82","83"],"import React from \"react\";\nimport { ReactComponent as GridPic } from \"../images/grid.svg\";\nimport WordNavbar from \"./navigation/word_navbar\";\nimport * as MdIcons from \"react-icons/md\";\nimport VideoPlayer from \"./common/video_player\";\n\nimport \"./tester_container.css\";\nimport \"./word_presenter.css\";\n\nfunction WordPresenter(props: {\n  word: string;\n  ancientUrl: string;\n  pictureUrl: string;\n  videoUrl: string;\n  showModal: boolean;\n  setShowModal: any;\n}) {\n  return (\n    <div className=\"word-container\">\n      <WordNavbar word={props.word} />\n      <div id=\"character-div\" className=\"word-area\">\n        <header className=\"sentence\">\n          就伸出右手由上而下想要搶走，兩個小孩爭了半天，誰都不肯放手。\n        </header>\n        <div className=\"evolution\">\n          <img width=\"250\" height=\"250\" src={props.pictureUrl} />\n          <img width=\"250\" height=\"250\" src={props.ancientUrl} />\n          <GridPic id={props.word} />\n        </div>\n        <div className=\"video\">\n          <button\n            className=\"audio-button demo-button\"\n            onClick={() => props.setShowModal(true)}\n          >\n            <MdIcons.MdLiveTv /> 教學影片\n          </button>\n          <VideoPlayer\n            open={props.showModal}\n            onClose={() => props.setShowModal(false)}\n            url={props.videoUrl}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WordPresenter;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/test_presenter.tsx",["84"],"import React from \"react\";\nimport { ReactComponent as GridPic } from \"../images/grid.svg\";\nimport ReactPlayer from \"react-player\";\n\nimport \"./test_presenter.css\";\n\nfunction TestPresenter(props: {\n  level: number;\n  pictureUrl?: string;\n  videoUrl?: string;\n}) {\n  switch (props.level) {\n    case 1:\n      return (\n        <div className=\"level-1\">\n          <img width=\"300\" height=\"300\" src={props.pictureUrl} />\n          <div id=\"nose-1\" className=\"drawing-background\"></div>\n          <ReactPlayer url={props.videoUrl} width=\"400px\" height=\"270px\" />\n        </div>\n      );\n    case 2:\n      return <div id=\"nose-2\" className=\"drawing-background\"></div>;\n    case 3:\n      return <GridPic className=\"grid-background\" />;\n    default:\n      return <div id=\"nose\" className=\"drawing-background\"></div>;\n  }\n}\n\nexport default TestPresenter;\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/word_data.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/sidebar_data.tsx",["85"],"import { IoMdHelpCircle } from \"react-icons/io\";\nimport { RiTeamFill } from \"react-icons/ri\";\nimport { ImQuill } from \"react-icons/im\";\nimport { FaHome } from 'react-icons/fa';\nexport const SidebarData = [\n  {\n    title: \"漢字庫\",\n    path: \"/\",\n    icon: <FaHome/>,\n    cName: \"nav-text\"\n  },\n  {\n    title: \"關於\",\n    path: \"/about\",\n    icon: <RiTeamFill/>,\n    cName: \"nav-text\"\n  },\n  {\n    title: \"幫助中心\",\n    path: \"/support\",\n    icon: <IoMdHelpCircle/>,\n    cName: \"nav-text\"\n  }\n];\n","/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/audio_player.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/video_player.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/constants/word_navbar_data.tsx",[],"/Users/tpan/Development/volunteer/breathing-hanzi/src/components/common/modal.tsx",[],{"ruleId":"86","severity":1,"message":"87","line":17,"column":11,"nodeType":"88","endLine":17,"endColumn":116},{"ruleId":"86","severity":1,"message":"87","line":59,"column":7,"nodeType":"88","endLine":59,"endColumn":69},{"ruleId":"86","severity":1,"message":"87","line":79,"column":7,"nodeType":"88","endLine":79,"endColumn":77},{"ruleId":"89","severity":1,"message":"90","line":104,"column":17,"nodeType":"91","messageId":"92","endLine":104,"endColumn":49},{"ruleId":"93","severity":1,"message":"94","line":25,"column":6,"nodeType":"95","endLine":25,"endColumn":12,"suggestions":"96"},{"ruleId":"86","severity":1,"message":"87","line":26,"column":11,"nodeType":"88","endLine":26,"endColumn":66},{"ruleId":"86","severity":1,"message":"87","line":27,"column":11,"nodeType":"88","endLine":27,"endColumn":66},{"ruleId":"86","severity":1,"message":"87","line":16,"column":11,"nodeType":"88","endLine":16,"endColumn":66},{"ruleId":"97","severity":1,"message":"98","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":17},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/style-prop-object","Style prop value must be an object","JSXAttribute","stylePropNotObject","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gridWriter'. Either include it or remove the dependency array.","ArrayExpression",["101"],"@typescript-eslint/no-unused-vars","'ImQuill' is defined but never used.","Identifier","unusedVar",{"desc":"102","fix":"103"},"Update the dependencies array to be: [gridWriter, word]",{"range":"104","text":"105"},[697,703],"[gridWriter, word]"]